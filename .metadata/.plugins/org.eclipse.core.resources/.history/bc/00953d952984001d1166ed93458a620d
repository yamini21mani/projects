package com.te.ecommerce.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

import com.te.ecommerce.dto.ProductDto;
import com.te.ecommerce.entity.Product;
import com.te.ecommerce.response.EcommerceResponse;
import com.te.ecommerce.serviceimplementation.ProductServiceImp;

@RestController
public class AdminController {
	@Autowired
	private ProductServiceImp productServiceImp;
	@Autowired
	private EcommerceResponse ecommerceResponse;
	
	@PostMapping("/createProduct")
	public ResponseEntity<EcommerceResponse> createProduct(ProductDto productDto){
		productServiceImp.createProduct(productDto);
		ecommerceResponse.setMessage("registeration successful");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@GetMapping("/getProduct")
	public ResponseEntity<EcommerceResponse> getProduct(ProductDto productDto){
		Product product = productServiceImp.getProduct(productDto);
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		ecommerceResponse.setData(product);
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@PutMapping("updateProduct")
	public ResponseEntity<EcommerceResponse> updateProduct(ProductDto productDto){
		productServiceImp.updateProduct(productDto);
		ecommerceResponse.setMessage("product modified successfully");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@DeleteMapping("deleteProduct")
	public ResponseEntity<EcommerceResponse> deleteProduct(ProductDto productDto){
		productServiceImp.deleteProduct(productDto);
		ecommerceResponse.setMessage("Product Deleted successfully");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@DeleteMapping("addCartItem")
	public ResponseEntity<EcommerceResponse> addCartItem(ProductDto productDto){
		productServiceImp.deleteProduct(productDto);
		ecommerceResponse.setMessage("cartItem added successfully");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@PutMapping("updateCartItem")
	public ResponseEntity<EcommerceResponse> getCartItem(ProductDto productDto){
		productServiceImp.deleteProduct(productDto);
		ecommerceResponse.setMessage("cartItem updated successfully");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	@DeleteMapping("deleteCartItem")
	public ResponseEntity<EcommerceResponse> deleteCartItem(ProductDto productDto){
		productServiceImp.deleteProduct(productDto);
		ecommerceResponse.setMessage("cartItem Deleted successfully");
		ecommerceResponse.setError(false);
		ecommerceResponse.setStatus("200");
		return new ResponseEntity<EcommerceResponse>(ecommerceResponse, HttpStatus.ACCEPTED);

		
	}
	
	
}
